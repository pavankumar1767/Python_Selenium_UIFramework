{"uuid": "466399f9-e69c-4e18-8e02-71f33827245e", "children": ["56d80c12-edc2-4e6c-ba99-044a5cb878bd"], "befores": [{"name": "setup_and_teardown", "status": "broken", "statusDetails": {"message": "KeyboardInterrupt\n", "trace": "  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\testCases\\baseTest.py\", line 10, in setup_and_teardown\n    self.init_driver()\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\testCases\\baseTest.py\", line 17, in init_driver\n    cls.driver = webdriver.Chrome()  # Change to desired driver (e.g., Firefox, Edge)\n                 ^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\", line 45, in __init__\n    super().__init__(\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 50, in __init__\n    if finder.get_browser_path():\n       ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 47, in get_browser_path\n    return self._binary_paths()[\"browser_path\"]\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 67, in _binary_paths\n    output = SeleniumManager().binary_paths(self._to_args())\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py\", line 55, in binary_paths\n    return self._run(args)\n           ^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\PycharmProjects\\TestUI\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py\", line 117, in _run\n    completed_proc = subprocess.run(args, capture_output=True, creationflags=subprocess.CREATE_NO_WINDOW)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\subprocess.py\", line 550, in run\n    stdout, stderr = process.communicate(input, timeout=timeout)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\subprocess.py\", line 1209, in communicate\n    stdout, stderr = self._communicate(input, endtime, timeout)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pavan.karri\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\subprocess.py\", line 1628, in _communicate\n    self.stdout_thread.join(self._remaining_time(endtime))\n  File \"C:\\Users\\pavan.karri\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\threading.py\", line 1147, in join\n    self._wait_for_tstate_lock()\n  File \"C:\\Users\\pavan.karri\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\threading.py\", line 1167, in _wait_for_tstate_lock\n    if lock.acquire(block, timeout):\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}, "start": 1739941228352, "stop": 1739941228830}], "start": 1739941228352, "stop": 1739941229359}